#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PenYourPrayerServer.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="pypdb")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public DBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PenYourPrayerDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_aaaaa_mustdeleteTemporaryTesting")]
		public ISingleResult<usp_aaaaa_mustdeleteTemporaryTestingResult> usp_aaaaa_mustdeleteTemporaryTesting()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_aaaaa_mustdeleteTemporaryTestingResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdateUserSocialInformation")]
		public int usp_UpdateUserSocialInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayName", DbType="NVarChar(200)")] string displayName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SocialEmail", DbType="VarChar(50)")] string socialEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProfilePictureURL", DbType="VarChar(200)")] string profilePictureURL)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, displayName, socialEmail, profilePictureURL);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_ActivateUserAccount")]
		public int usp_ActivateUserAccount([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] System.Nullable<long> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActivationCode", DbType="VarChar(100)")] string activationCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(200)")] ref string result, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayName", DbType="NVarChar(200)")] ref string displayName)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, activationCode, result, displayName);
			result = ((string)(result1.GetParameterValue(2)));
			displayName = ((string)(result1.GetParameterValue(3)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_AddLog")]
		public int usp_AddLog([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LogText", DbType="VarChar(MAX)")] string logText)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), logText);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_AddNewPrayer")]
		public int usp_AddNewPrayer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Prayer", DbType="NVarChar(MAX)")] string prayer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedWhen", DbType="BigInt")] System.Nullable<long> createdWhen, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TouchedWhen", DbType="BigInt")] System.Nullable<long> touchedWhen, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PublicView", DbType="Bit")] System.Nullable<bool> publicView, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Friends", DbType="Xml")] System.Xml.Linq.XElement friends, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueActionGUID", DbType="VarChar(128)")] string queueActionGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(100)")] ref string result, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrayerID", DbType="BigInt")] ref System.Nullable<long> prayerID)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, prayer, createdWhen, touchedWhen, publicView, friends, queueActionGUID, result, prayerID);
			result = ((string)(result1.GetParameterValue(7)));
			prayerID = ((System.Nullable<long>)(result1.GetParameterValue(8)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_AddNewPrayerAmen")]
		public int usp_AddNewPrayerAmen([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueActionGUID", DbType="VarChar(128)")] string queueActionGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrayerID", DbType="BigInt")] System.Nullable<long> prayerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(100)")] ref string result, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AmenID", DbType="BigInt")] ref System.Nullable<long> amenID)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), queueActionGUID, userID, prayerID, result, amenID);
			result = ((string)(result1.GetParameterValue(3)));
			amenID = ((System.Nullable<long>)(result1.GetParameterValue(4)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_AddNewPrayerAnswered")]
		public int usp_AddNewPrayerAnswered([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueActionGUID", DbType="VarChar(128)")] string queueActionGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrayerID", DbType="BigInt")] System.Nullable<long> prayerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Answered", DbType="NVarChar(MAX)")] string answered, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedWhen", DbType="BigInt")] System.Nullable<long> createdWhen, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TouchedWhen", DbType="BigInt")] System.Nullable<long> touchedWhen, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(100)")] ref string result, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnsweredID", DbType="BigInt")] ref System.Nullable<long> answeredID)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), queueActionGUID, userID, prayerID, answered, createdWhen, touchedWhen, result, answeredID);
			result = ((string)(result1.GetParameterValue(6)));
			answeredID = ((System.Nullable<long>)(result1.GetParameterValue(7)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_AddNewPrayerAttachment")]
		public int usp_AddNewPrayerAttachment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrayerID", DbType="BigInt")] System.Nullable<long> prayerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Filename", DbType="VarChar(128)")] string filename, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OriginalFilePath", DbType="VarChar(MAX)")] string originalFilePath, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttachmentID", DbType="BigInt")] ref System.Nullable<long> attachmentID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prayerID, filename, originalFilePath, userID, attachmentID);
			attachmentID = ((System.Nullable<long>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_AddNewPrayerComment")]
		public int usp_AddNewPrayerComment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueActionGUID", DbType="VarChar(128)")] string queueActionGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrayerID", DbType="BigInt")] System.Nullable<long> prayerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Comment", DbType="NVarChar(MAX)")] string comment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedWhen", DbType="BigInt")] System.Nullable<long> createdWhen, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TouchedWhen", DbType="BigInt")] System.Nullable<long> touchedWhen, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(100)")] ref string result, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommentID", DbType="BigInt")] ref System.Nullable<long> commentID)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), queueActionGUID, userID, prayerID, comment, createdWhen, touchedWhen, result, commentID);
			result = ((string)(result1.GetParameterValue(6)));
			commentID = ((System.Nullable<long>)(result1.GetParameterValue(7)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_AddNewPrayerRequest")]
		public int usp_AddNewPrayerRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueActionGUID", DbType="VarChar(128)")] string queueActionGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Subject", DbType="NVarChar(40)")] string subject, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(4000)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CreatedWhen", DbType="BigInt")] System.Nullable<long> createdWhen, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TouchedWhen", DbType="BigInt")] System.Nullable<long> touchedWhen, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(100)")] ref string result, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrayerRequestID", DbType="BigInt")] ref System.Nullable<long> prayerRequestID)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), queueActionGUID, userID, subject, description, createdWhen, touchedWhen, result, prayerRequestID);
			result = ((string)(result1.GetParameterValue(6)));
			prayerRequestID = ((System.Nullable<long>)(result1.GetParameterValue(7)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_AddNewPrayerRequestAttachment")]
		public int usp_AddNewPrayerRequestAttachment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrayerRequestID", DbType="BigInt")] System.Nullable<long> prayerRequestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Filename", DbType="VarChar(128)")] string filename, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OriginalFilePath", DbType="VarChar(MAX)")] string originalFilePath, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttachmentID", DbType="BigInt")] ref System.Nullable<long> attachmentID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prayerRequestID, filename, originalFilePath, userID, attachmentID);
			attachmentID = ((System.Nullable<long>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_AddNewUser")]
		public int usp_AddNewUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginType", DbType="VarChar(15)")] string loginType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(200)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProfilePictureURL", DbType="VarChar(200)")] string profilePictureURL, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="VarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MobilePlatform", DbType="VarChar(10)")] string mobilePlatform, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PushNotificationID", DbType="VarChar(200)")] string pushNotificationID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HMACHashKey", DbType="VarChar(128)")] string hMACHashKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Country", DbType="VarChar(50)")] string country, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Region", DbType="VarChar(100)")] string region, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="VarChar(100)")] string city, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(200)")] ref string result, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] ref System.Nullable<long> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerificationCode", DbType="VarChar(100)")] ref string verificationCode)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginType, userName, name, profilePictureURL, password, mobilePlatform, pushNotificationID, hMACHashKey, country, region, city, result, iD, verificationCode);
			result = ((string)(result1.GetParameterValue(11)));
			iD = ((System.Nullable<long>)(result1.GetParameterValue(12)));
			verificationCode = ((string)(result1.GetParameterValue(13)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_AddNonce")]
		public int usp_AddNonce([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginType", DbType="VarChar(15)")] string loginType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="VarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestDate", DbType="DateTime")] System.Nullable<System.DateTime> requestDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nonce", DbType="Int")] System.Nullable<int> nonce, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(200)")] ref string result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginType, username, requestDate, nonce, result);
			result = ((string)(result1.GetParameterValue(4)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_AddQueueAction")]
		public int usp_AddQueueAction([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GUID", DbType="VarChar(128)")] string gUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(10)")] ref string result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, gUID, result);
			result = ((string)(result1.GetParameterValue(2)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_DeletePrayer")]
		public int usp_DeletePrayer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueActionGUID", DbType="VarChar(128)")] string queueActionGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrayerID", DbType="BigInt")] System.Nullable<long> prayerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), queueActionGUID, userID, prayerID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_DeletePrayerAmen")]
		public int usp_DeletePrayerAmen([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueActionGUID", DbType="VarChar(128)")] string queueActionGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrayerID", DbType="BigInt")] System.Nullable<long> prayerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), queueActionGUID, userID, prayerID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_DeletePrayerAnswered")]
		public int usp_DeletePrayerAnswered([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueActionGUID", DbType="VarChar(128)")] string queueActionGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnsweredID", DbType="BigInt")] System.Nullable<long> answeredID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(100)")] ref string result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), queueActionGUID, userID, answeredID, result);
			result = ((string)(result1.GetParameterValue(3)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_DeletePrayerComment")]
		public int usp_DeletePrayerComment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueActionGUID", DbType="VarChar(128)")] string queueActionGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommentID", DbType="BigInt")] System.Nullable<long> commentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(100)")] ref string result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), queueActionGUID, userID, commentID, result);
			result = ((string)(result1.GetParameterValue(3)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_DeletePrayerRequest")]
		public int usp_DeletePrayerRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueActionGUID", DbType="VarChar(128)")] string queueActionGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrayerRequestID", DbType="BigInt")] System.Nullable<long> prayerRequestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(100)")] ref string result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), queueActionGUID, userID, prayerRequestID, result);
			result = ((string)(result1.GetParameterValue(3)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetCreatedPrayerFromQueueActionGUID")]
		public int usp_GetCreatedPrayerFromQueueActionGUID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueActionGUID", DbType="VarChar(128)")] string queueActionGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrayerID", DbType="BigInt")] ref System.Nullable<long> prayerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, queueActionGUID, prayerID);
			prayerID = ((System.Nullable<long>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetLatestFriends")]
		public ISingleResult<usp_GetLatestFriendsResult> usp_GetLatestFriends([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string friends)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, friends);
			return ((ISingleResult<usp_GetLatestFriendsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetLatestPrayerRequest")]
		public ISingleResult<usp_GetLatestPrayerRequestResult> usp_GetLatestPrayerRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string pr)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, pr);
			return ((ISingleResult<usp_GetLatestPrayerRequestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetLatestPrayers")]
		public ISingleResult<usp_GetLatestPrayersResult> usp_GetLatestPrayers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrayerID", DbType="BigInt")] System.Nullable<long> prayerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, prayerID);
			return ((ISingleResult<usp_GetLatestPrayersResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetPrayerAttachmentInformation")]
		public int usp_GetPrayerAttachmentInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttachmentID", DbType="BigInt")] System.Nullable<long> attachmentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Filename", DbType="VarChar(128)")] ref string filename, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OwnerID", DbType="BigInt")] ref System.Nullable<long> ownerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), attachmentID, userID, filename, ownerID);
			filename = ((string)(result.GetParameterValue(2)));
			ownerID = ((System.Nullable<long>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetUserActivationCode")]
		public ISingleResult<usp_GetUserActivationCodeResult> usp_GetUserActivationCode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginType", DbType="VarChar(15)")] string loginType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(50)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginType, userName);
			return ((ISingleResult<usp_GetUserActivationCodeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetUserInformation")]
		public ISingleResult<usp_GetUserInformationResult> usp_GetUserInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginType", DbType="VarChar(15)")] string loginType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(50)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginType, userName);
			return ((ISingleResult<usp_GetUserInformationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_ResetPassword")]
		public int usp_ResetPassword([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginType", DbType="VarChar(15)")] string loginType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="VarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(200)")] ref string result, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] ref System.Nullable<long> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VerificationCode", DbType="VarChar(100)")] ref string verificationCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DisplayName", DbType="VarChar(200)")] ref string displayName)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginType, username, result, iD, verificationCode, displayName);
			result = ((string)(result1.GetParameterValue(2)));
			iD = ((System.Nullable<long>)(result1.GetParameterValue(3)));
			verificationCode = ((string)(result1.GetParameterValue(4)));
			displayName = ((string)(result1.GetParameterValue(5)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdatePrayerAnswered")]
		public int usp_UpdatePrayerAnswered([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueActionGUID", DbType="VarChar(128)")] string queueActionGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnsweredID", DbType="BigInt")] System.Nullable<long> answeredID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Answer", DbType="NVarChar(MAX)")] string answer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TouchedWhen", DbType="BigInt")] System.Nullable<long> touchedWhen, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(100)")] ref string result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), queueActionGUID, userID, answeredID, answer, touchedWhen, result);
			result = ((string)(result1.GetParameterValue(5)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdatePrayerComment")]
		public int usp_UpdatePrayerComment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueActionGUID", DbType="VarChar(128)")] string queueActionGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommentID", DbType="BigInt")] System.Nullable<long> commentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Comment", DbType="NVarChar(MAX)")] string comment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TouchedWhen", DbType="BigInt")] System.Nullable<long> touchedWhen, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(100)")] ref string result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), queueActionGUID, userID, commentID, comment, touchedWhen, result);
			result = ((string)(result1.GetParameterValue(5)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdatePrayerPublicView")]
		public int usp_UpdatePrayerPublicView([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueActionGUID", DbType="VarChar(128)")] string queueActionGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrayerID", DbType="BigInt")] System.Nullable<long> prayerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PublicView", DbType="Bit")] System.Nullable<bool> publicView, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(100)")] ref string result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), queueActionGUID, userID, prayerID, publicView, result);
			result = ((string)(result1.GetParameterValue(4)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdatePrayerRequest")]
		public int usp_UpdatePrayerRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueActionGUID", DbType="VarChar(128)")] string queueActionGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrayerRequestID", DbType="BigInt")] System.Nullable<long> prayerRequestID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Subject", DbType="NVarChar(50)")] string subject, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="NVarChar(4000)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Answered", DbType="Bit")] System.Nullable<bool> answered, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnswerComment", DbType="NVarChar(4000)")] string answerComment, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnsweredWhen", DbType="BigInt")] System.Nullable<long> answeredWhen, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TouchedWhen", DbType="BigInt")] System.Nullable<long> touchedWhen, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(100)")] ref string result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), queueActionGUID, userID, prayerRequestID, subject, description, answered, answerComment, answeredWhen, touchedWhen, result);
			result = ((string)(result1.GetParameterValue(9)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdatePrayerTagFriends")]
		public int usp_UpdatePrayerTagFriends([global::System.Data.Linq.Mapping.ParameterAttribute(Name="QueueActionGUID", DbType="VarChar(128)")] string queueActionGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PrayerID", DbType="BigInt")] System.Nullable<long> prayerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Friends", DbType="Xml")] System.Xml.Linq.XElement friends, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(100)")] ref string result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), queueActionGUID, userID, prayerID, friends, result);
			result = ((string)(result1.GetParameterValue(4)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdateUserMobileDeviceInformation")]
		public int usp_UpdateUserMobileDeviceInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MobilePlatform", DbType="VarChar(10)")] string mobilePlatform, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PushNotificationID", DbType="VarChar(200)")] string pushNotificationID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, mobilePlatform, pushNotificationID);
			return ((int)(result.ReturnValue));
		}
	}
	
	public partial class usp_aaaaa_mustdeleteTemporaryTestingResult
	{
		
		private System.DateTime _Column1;
		
		public usp_aaaaa_mustdeleteTemporaryTestingResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="DateTime NOT NULL")]
		public System.DateTime Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class usp_GetLatestFriendsResult
	{
		
		private string _DisplayName;
		
		private string _ProfilePictureURL;
		
		private long _ID;
		
		public usp_GetLatestFriendsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfilePictureURL", DbType="VarChar(200)")]
		public string ProfilePictureURL
		{
			get
			{
				return this._ProfilePictureURL;
			}
			set
			{
				if ((this._ProfilePictureURL != value))
				{
					this._ProfilePictureURL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
	
	public partial class usp_GetLatestPrayerRequestResult
	{
		
		private long _TouchedWhen;
		
		private long _CreatedWhen;
		
		private long _PrayerRequestID;
		
		private string _Subject;
		
		private string _Description;
		
		private bool _Answered;
		
		private string _AnswerComment;
		
		private System.Nullable<long> _AnsweredWhen;
		
		private System.Xml.Linq.XElement _Attachments;
		
		public usp_GetLatestPrayerRequestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TouchedWhen", DbType="BigInt NOT NULL")]
		public long TouchedWhen
		{
			get
			{
				return this._TouchedWhen;
			}
			set
			{
				if ((this._TouchedWhen != value))
				{
					this._TouchedWhen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="BigInt NOT NULL")]
		public long CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this._CreatedWhen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrayerRequestID", DbType="BigInt NOT NULL")]
		public long PrayerRequestID
		{
			get
			{
				return this._PrayerRequestID;
			}
			set
			{
				if ((this._PrayerRequestID != value))
				{
					this._PrayerRequestID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answered", DbType="Bit NOT NULL")]
		public bool Answered
		{
			get
			{
				return this._Answered;
			}
			set
			{
				if ((this._Answered != value))
				{
					this._Answered = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerComment", DbType="NVarChar(4000)")]
		public string AnswerComment
		{
			get
			{
				return this._AnswerComment;
			}
			set
			{
				if ((this._AnswerComment != value))
				{
					this._AnswerComment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnsweredWhen", DbType="BigInt")]
		public System.Nullable<long> AnsweredWhen
		{
			get
			{
				return this._AnsweredWhen;
			}
			set
			{
				if ((this._AnsweredWhen != value))
				{
					this._AnsweredWhen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachments", DbType="Xml")]
		public System.Xml.Linq.XElement Attachments
		{
			get
			{
				return this._Attachments;
			}
			set
			{
				if ((this._Attachments != value))
				{
					this._Attachments = value;
				}
			}
		}
	}
	
	public partial class usp_GetLatestPrayersResult
	{
		
		private long _TouchedWhen;
		
		private long _CreatedWhen;
		
		private long _UserID;
		
		private long _PrayerID;
		
		private string _PrayerContent;
		
		private bool _PublicView;
		
		private string _QueueActionGUID;
		
		private System.Xml.Linq.XElement _TagFriends;
		
		private System.Xml.Linq.XElement _Attachments;
		
		private System.Xml.Linq.XElement _Comment;
		
		private System.Xml.Linq.XElement _Answers;
		
		private System.Xml.Linq.XElement _Amen;
		
		public usp_GetLatestPrayersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TouchedWhen", DbType="BigInt NOT NULL")]
		public long TouchedWhen
		{
			get
			{
				return this._TouchedWhen;
			}
			set
			{
				if ((this._TouchedWhen != value))
				{
					this._TouchedWhen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="BigInt NOT NULL")]
		public long CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this._CreatedWhen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrayerID", DbType="BigInt NOT NULL")]
		public long PrayerID
		{
			get
			{
				return this._PrayerID;
			}
			set
			{
				if ((this._PrayerID != value))
				{
					this._PrayerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrayerContent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PrayerContent
		{
			get
			{
				return this._PrayerContent;
			}
			set
			{
				if ((this._PrayerContent != value))
				{
					this._PrayerContent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicView", DbType="Bit NOT NULL")]
		public bool PublicView
		{
			get
			{
				return this._PublicView;
			}
			set
			{
				if ((this._PublicView != value))
				{
					this._PublicView = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueueActionGUID", DbType="VarChar(128)")]
		public string QueueActionGUID
		{
			get
			{
				return this._QueueActionGUID;
			}
			set
			{
				if ((this._QueueActionGUID != value))
				{
					this._QueueActionGUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagFriends", DbType="Xml")]
		public System.Xml.Linq.XElement TagFriends
		{
			get
			{
				return this._TagFriends;
			}
			set
			{
				if ((this._TagFriends != value))
				{
					this._TagFriends = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachments", DbType="Xml")]
		public System.Xml.Linq.XElement Attachments
		{
			get
			{
				return this._Attachments;
			}
			set
			{
				if ((this._Attachments != value))
				{
					this._Attachments = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="Xml")]
		public System.Xml.Linq.XElement Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answers", DbType="Xml")]
		public System.Xml.Linq.XElement Answers
		{
			get
			{
				return this._Answers;
			}
			set
			{
				if ((this._Answers != value))
				{
					this._Answers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amen", DbType="Xml")]
		public System.Xml.Linq.XElement Amen
		{
			get
			{
				return this._Amen;
			}
			set
			{
				if ((this._Amen != value))
				{
					this._Amen = value;
				}
			}
		}
	}
	
	public partial class usp_GetUserActivationCodeResult
	{
		
		private string _LoginType;
		
		private string _UserName;
		
		private string _DisplayName;
		
		private long _ID;
		
		private string _ActivationCode;
		
		public usp_GetUserActivationCodeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginType", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string LoginType
		{
			get
			{
				return this._LoginType;
			}
			set
			{
				if ((this._LoginType != value))
				{
					this._LoginType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationCode", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ActivationCode
		{
			get
			{
				return this._ActivationCode;
			}
			set
			{
				if ((this._ActivationCode != value))
				{
					this._ActivationCode = value;
				}
			}
		}
	}
	
	public partial class usp_GetUserInformationResult
	{
		
		private string _LoginType;
		
		private string _UserName;
		
		private long _ID;
		
		private string _DisplayName;
		
		private string _ProfilePictureURL;
		
		private string _Password;
		
		private string _MobilePlatform;
		
		private string _PushNotificationID;
		
		private System.DateTime _CreatedWhen;
		
		private System.DateTime _TouchedWhen;
		
		private string _HMACHashKey;
		
		private string _Country;
		
		private string _Region;
		
		private string _City;
		
		private bool _EmailVerification;
		
		public usp_GetUserInformationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginType", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string LoginType
		{
			get
			{
				return this._LoginType;
			}
			set
			{
				if ((this._LoginType != value))
				{
					this._LoginType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfilePictureURL", DbType="VarChar(200)")]
		public string ProfilePictureURL
		{
			get
			{
				return this._ProfilePictureURL;
			}
			set
			{
				if ((this._ProfilePictureURL != value))
				{
					this._ProfilePictureURL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePlatform", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MobilePlatform
		{
			get
			{
				return this._MobilePlatform;
			}
			set
			{
				if ((this._MobilePlatform != value))
				{
					this._MobilePlatform = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushNotificationID", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string PushNotificationID
		{
			get
			{
				return this._PushNotificationID;
			}
			set
			{
				if ((this._PushNotificationID != value))
				{
					this._PushNotificationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this._CreatedWhen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TouchedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime TouchedWhen
		{
			get
			{
				return this._TouchedWhen;
			}
			set
			{
				if ((this._TouchedWhen != value))
				{
					this._TouchedWhen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HMACHashKey", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string HMACHashKey
		{
			get
			{
				return this._HMACHashKey;
			}
			set
			{
				if ((this._HMACHashKey != value))
				{
					this._HMACHashKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(100)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this._Region = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailVerification", DbType="Bit NOT NULL")]
		public bool EmailVerification
		{
			get
			{
				return this._EmailVerification;
			}
			set
			{
				if ((this._EmailVerification != value))
				{
					this._EmailVerification = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
