#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PenYourPrayerServer.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="pypdb")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public DBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PenYourPrayerDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_AddNonce")]
		public int usp_AddNonce([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginType", DbType="VarChar(15)")] string loginType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="VarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RequestDate", DbType="DateTime")] System.Nullable<System.DateTime> requestDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Nonce", DbType="Int")] System.Nullable<int> nonce, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(200)")] ref string result)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginType, username, requestDate, nonce, result);
			result = ((string)(result1.GetParameterValue(4)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_GetUserInformation")]
		public ISingleResult<usp_GetUserInformationResult> usp_GetUserInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginType", DbType="VarChar(15)")] string loginType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(50)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginType, userName);
			return ((ISingleResult<usp_GetUserInformationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_AddNewUser")]
		public int usp_AddNewUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoginType", DbType="VarChar(15)")] string loginType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(50)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(200)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProfilePictureURL", DbType="VarChar(200)")] string profilePictureURL, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="VarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MobilePlatform", DbType="VarChar(10)")] string mobilePlatform, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PushNotificationID", DbType="VarChar(200)")] string pushNotificationID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HMACHashKey", DbType="VarChar(128)")] string hMACHashKey, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Country", DbType="VarChar(50)")] string country, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Region", DbType="VarChar(100)")] string region, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="VarChar(100)")] string city, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Result", DbType="VarChar(200)")] ref string result, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] ref System.Nullable<long> iD)
		{
			IExecuteResult result1 = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loginType, userName, name, profilePictureURL, password, mobilePlatform, pushNotificationID, hMACHashKey, country, region, city, result, iD);
			result = ((string)(result1.GetParameterValue(11)));
			iD = ((System.Nullable<long>)(result1.GetParameterValue(12)));
			return ((int)(result1.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_addLog")]
		public int usp_addLog([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string value)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), value);
			return ((int)(result.ReturnValue));
		}
	}
	
	public partial class usp_GetUserInformationResult
	{
		
		private string _LoginType;
		
		private string _UserName;
		
		private long _ID;
		
		private string _DisplayName;
		
		private string _ProfilePictureURL;
		
		private string _Password;
		
		private string _MobilePlatform;
		
		private string _PushNotificationID;
		
		private System.DateTime _CreatedWhen;
		
		private System.DateTime _TouchedWhen;
		
		private string _HMACHashKey;
		
		private string _Country;
		
		private string _Region;
		
		private string _City;
		
		public usp_GetUserInformationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginType", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string LoginType
		{
			get
			{
				return this._LoginType;
			}
			set
			{
				if ((this._LoginType != value))
				{
					this._LoginType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="BigInt NOT NULL")]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this._DisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfilePictureURL", DbType="VarChar(200)")]
		public string ProfilePictureURL
		{
			get
			{
				return this._ProfilePictureURL;
			}
			set
			{
				if ((this._ProfilePictureURL != value))
				{
					this._ProfilePictureURL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePlatform", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MobilePlatform
		{
			get
			{
				return this._MobilePlatform;
			}
			set
			{
				if ((this._MobilePlatform != value))
				{
					this._MobilePlatform = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushNotificationID", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string PushNotificationID
		{
			get
			{
				return this._PushNotificationID;
			}
			set
			{
				if ((this._PushNotificationID != value))
				{
					this._PushNotificationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedWhen
		{
			get
			{
				return this._CreatedWhen;
			}
			set
			{
				if ((this._CreatedWhen != value))
				{
					this._CreatedWhen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TouchedWhen", DbType="DateTime NOT NULL")]
		public System.DateTime TouchedWhen
		{
			get
			{
				return this._TouchedWhen;
			}
			set
			{
				if ((this._TouchedWhen != value))
				{
					this._TouchedWhen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HMACHashKey", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string HMACHashKey
		{
			get
			{
				return this._HMACHashKey;
			}
			set
			{
				if ((this._HMACHashKey != value))
				{
					this._HMACHashKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(100)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this._Region = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
